
name: CI Build  # GitHub Actions workflow for CI/CD pipeline
on:  # Trigger workflow on push or pull request to master, except README.md changes
  push:
    branches:
      - master
    paths-ignore:
    - 'README.md'

  pull_request:
    branches:
      - master
    paths-ignore:
    - 'README.md'

jobs:
  build:  # Main build job
    runs-on: ubuntu-latest  # Use Ubuntu runner
    container: python:3.11-slim  # Use Python 3.11 slim container for consistency

    # Required services
    services:
      postgres:  # PostgreSQL service for integration tests
        image: postgres:15-alpine  # Use official lightweight Postgres image
        env:
            POSTGRES_USER: myuser  # Set Postgres username
            POSTGRES_PASSWORD: postgres  # Set Postgres password
            POSTGRES_DB: testdb  # Set default database
        ports:
          - 5432:5432  # Expose Postgres port
        # Health check to ensure Postgres is ready before tests run
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps for the build
    steps:
      - name: Checkout  # Clone repository code
        uses: actions/checkout@v3
      
      - name: Install Python package dependencies  # Install pip, pipenv, and all dependencies
        run: |
          python -m pip install -U pip pipenv
          pipenv install --system --dev

      - name: Linting  # Run flake8 and pylint for code quality checks
        run: |
          flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
          pylint service tests --max-line-length=127

      - name: Run unit tests with nose  # Run pytest with coverage, fail if coverage <95%
        run: |
          pytest --pspec --cov=service --cov-fail-under=95
        env:
          FLASK_APP: wsgi:app  # Set Flask app entrypoint
          DATABASE_URI: "postgresql+psycopg://myuser:mypassword@localhost:5432/mydatabase"  # DB connection string

      - name: Upload code coverage  # Upload coverage report to Codecov
        uses: codecov/codecov-action@v3.1.4
